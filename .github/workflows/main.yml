name: Deploy Node.js App with Auto Rollback (PM2)

on:
  workflow_dispatch:  # Allows manual trigger
  push:
    branches: [ master ]  # Change to [ master ] if your default branch is master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Updated to latest v4 for better performance

      - name: Deploy on server
        run: |
          ssh -o StrictHostKeyChecking=no -T ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            set -e
            echo "üöÄ Starting deployment for Landmark Cards App with PM2..."

            APP_DIR="/var/www/html/myapp"
            BACKUP_DIR="/var/www/html/myapp_backup"

            # Backup current version
            if [ -d "$APP_DIR" ]; then
              rm -rf "$BACKUP_DIR"
              cp -r "$APP_DIR" "$BACKUP_DIR" || { echo "‚ùå Backup failed"; exit 1; }
              echo "‚úÖ Backup created at $BACKUP_DIR"
            fi

            # Fetch new code from your repo using SSH URL
            rm -rf "$APP_DIR"
            git clone git@github.com:sidhant7510/project-githubaction.git "$APP_DIR"
            cd "$APP_DIR"

            # Install dependencies (with legacy-peer-deps to fix TypeScript/react-scripts conflict)
            echo "üì¶ Installing Node.js dependencies..."
            npm install --legacy-peer-deps

            # Build project (assumes React app builds to 'build/' folder)
            echo "üèóÔ∏è Running build..."
            if npm run | grep -q "build"; then
              npm run build
            else
              echo "‚ÑπÔ∏è No build script found, skipping build"
              # Fallback: Create a basic build dir if no script
              mkdir -p build
              cp -r . build/ || true
            fi

            # Run tests (optional, for your conditional rendering logic)
            echo "üß™ Running tests..."
            if npm run | grep -q "test"; then
              npm test -- --watchAll=false  # Run tests non-interactively
            else
              echo "‚ÑπÔ∏è No test script found, skipping tests"
            fi

            # Simple Express server for static React build (create if not exists)
            if [ ! -f server.js ]; then
              cat > server.js << 'SERVER_JS'
            const express = require('express');
            const path = require('path');
            const app = express();
            const PORT = process.env.PORT || 3000;

            // Serve static files from build folder
            app.use(express.static(path.join(__dirname, 'build')));

            // Handle React routing (send index.html for all requests)
            app.get('*', (req, res) => {
              res.sendFile(path.join(__dirname, 'build', 'index.html'));
            });

            app.listen(PORT, () => {
              console.log(`Landmark Cards App serving on port ${PORT}`);
            });
            SERVER_JS
              echo "‚úÖ Created simple Express server for static build"
            fi

            # Install Express if needed for the server
            npm install express --legacy-peer-deps --save

            # Restart app with PM2 (using server.js for the built app)
            echo "üöÄ Restarting app with PM2..."
            pm2 delete myapp || true  # Clean up if exists
            if [ -f server.js ]; then
              pm2 start server.js --name myapp --no-autorestart || { echo "‚ùå PM2 start failed"; exit 1; }
              pm2 save || { echo "‚ùå PM2 save failed"; exit 1; }
              echo "‚úÖ PM2 process restarted and saved"
            else
              echo "‚ùå server.js not found, deployment failed"
              exit 1
            fi
          EOF
        shell: /usr/bin/bash -e {0}

  rollback:
    runs-on: ubuntu-latest
    needs: deploy
    if: failure()
    steps:
      - name: Rollback on server
        run: |
          ssh -o StrictHostKeyChecking=no -T ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            echo "‚ö†Ô∏è Deployment failed. Rolling back to previous version..."
            APP_DIR="/var/www/html/myapp"
            BACKUP_DIR="/var/www/html/myapp_backup"

            if [ -d "$BACKUP_DIR" ]; then
              rm -rf "$APP_DIR"
              cp -r "$BACKUP_DIR" "$APP_DIR" || { echo "‚ùå Rollback copy failed"; exit 1; }
              echo "‚úÖ Rollback successful"

              cd "$APP_DIR"
              echo "üöÄ Restarting rollback version with PM2..."
              pm2 delete myapp || true
              if [ -f server.js ]; then
                pm2 start server.js --name myapp --no-autorestart || { echo "‚ùå PM2 rollback start failed"; exit 1; }
                pm2 save || { echo "‚ùå PM2 save failed"; exit 1; }
              else
                echo "‚ö†Ô∏è No server.js found in backup; manual restart needed"
              fi
            else
              echo "‚ùå No backup found. Manual recovery required!"
              exit 1
            fi
          EOF
        shell: /usr/bin/bash -e {0}
